/**
 * Bekeshov Rymzhan. 
 * play.kotlinlang.org 
 */

//WARNING: If you want to run this code on console, you need to run each exercise separately!
//Each exercise is devided by comment

// 1 EXERCISE
fun main() {
    
    val i1=1 
    val i2=0 

    val w1=0.45
    val w2=0.78 
    val w3=-0.12 
    val w4=0.13 
    val w5=1.5 
    val w6=-2.3
    
    var h1Input: Double = (i1*w1) + (i2*w3)
    var h1Output: Double = 1 / (1 + Math.pow(2.71, -(h1Input)))
    
    var h2Input: Double = (i1*w2) + (i2*w4)
    var h2Output: Double = 1 / (1 + Math.pow(2.71, -(h2Input)))
    
    var o1Input: Double = h1Output*w5 + h2Output*w6
    var o1Output: Double = 1 / (1 + Math.pow(2.71, -(o1Input)))
    
    println("H1 input: "+h1Input.toString())
    println("H1 output: "+h1Output.toString())
    println("H2 input: "+h2Input.toString())
    println("H2 output: "+h2Output.toString())
    println("O1 input: "+o1Input.toString())
    println("O1 output: "+o1Output.toString())
  
}

// 2 EXERCISE
fun main() {
    
    val i1=1 
    val i2=0 

    val w1=0.45
    val w2=0.78 
    val w3=-0.12 
    val w4=0.13 
    val w5=1.5 
    val w6=-2.3
    
    val c = 2

    var h1Input: Double = (i1*w1) + (i2*w3) + c*0.3
    var h1Output: Double = 1 / (1 + Math.pow(2.71, -(h1Input)))
    
    var h2Input: Double = (i1*w2) + (i2*w4) + c*0.3
    var h2Output: Double = 1 / (1 + Math.pow(2.71, -(h2Input)))
    
    var o1Input: Double = h1Output*w5 + h2Output*w6
    var o1Output: Double = 1 / (1 + Math.pow(2.71, -(o1Input)))
    
    println("H1 input: "+h1Input.toString())
    println("H1 output: "+h1Output.toString())
    println("H2 input: "+h2Input.toString())
    println("H2 output: "+h2Output.toString())
    println("O1 input: "+o1Input.toString())
    println("O1 output: "+o1Output.toString())
  
}



// 3 EXERCISE
fun main(){

    val i1=1 
    val i2=0 

    val w1=0.45
    val w2=0.78 
    val w3=-0.12 
    val w4=0.13 
    val w5=1.5 
    val w6=-2.3
    
    val c = 2
    
    val S1: Double = i1 * w1 + i2 * w3
    val S1Output = StepFunc(S1)

        println("H1 input $S1")
        println("H1 output $S1Output")

        val S2: Double = i1 * w2 + i2 * w4
        val S2Output = StepFunc(S2)

        println("H2 input $S2")
        println("H2 output $S2Output")

        val O11: Double = S1Output * w5 + S2Output * w6
        val O11Output = 1 / (1 + Math.pow(2.71, -(1 * O11)))

        println("01 input $O11")
        println("01 output $O11Output")
}

fun StepFunc(value: Double): Double {
        val bios = 0.5
        var returnValue = 0.0
        returnValue = if (value > 0.5) {
            0.0
        } else {
            1.0
        }
        return returnValue
    }
